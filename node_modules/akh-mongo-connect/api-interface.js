// Create and Save a new Note
exports.create = (req, res) => {
    const collection_name = req.params.collection_name;
    let Collection = require('./db.model')(collection_name);

    if(collection_name == ''){
        return res.status(400).send({
            message: "Collection name can not be empty!"
        });
    }
    //Check for request body
    if(Object.keys(req.body).length == 0) {
        return res.status(400).send({
            message: "Posted data can not be empty"
        });
    }
    // Create a Note
    let collectionObject = new Collection(req.body);
    collectionObject.save().then(document => {
        res.status(200).send(document);
    }).catch(err => {
        res.status(500).send({
            message: err.message || "Unknown error"
        });
    });
};

// Create and Save a new Note
exports.update = (req, res) => {
    const collection_name = req.params.collection_name;
    const docId = req.params.id;

    let Collection = require('./db.model.js')(collection_name);

    if(docId == ''){
        return res.status(400).send({
            message: "Sepcify document id to update data!"
        });
    }

    if(collection_name == ''){
        return res.status(400).send({
            message: "Collection name can not be empty!"
        });
    }
    //Check for request body
    if(Object.keys(req.body).length == 0) {
        return res.status(400).send({
            message: "Posted data can not be empty"
        });
    }

    var query = {'_id': docId};
    Collection.findOneAndUpdate(
        query, req.body, { upsert: false }, 
        function(err, document){
            if(document === undefined || document === null){
                return res.status(404).send({
                    message: "Not Found."
                });
            }
            if (err){
                return res.status(500).send({ 
                    message: err.message || "Unknown error"
                 });
            }
            return res.send(document);
        }
    );
};

// Retrieve and return all notes from the database.
exports.findAll = (req, res) => {
    const collection_name = req.params.collection_name;
    const Collection = require('./db.model.js')(collection_name);
    
    let query = {};
    if(req.query.query != ""){
        try{
            query = JSON.parse(req.query.query);
        }catch(e){
            query = {}
        }
    }

    Collection.find(
        // query
        query,
    
    ).exec((err, data) => {
        if (err) return res.status(200).send(err)
        return res.status(200).send(data)
    });

}

// Find a single note with a noteId
exports.findOne = (req, res) => {
    const collection_name = req.params.collection_name;
    const docId = req.params.id;

    let Collection = require('./db.model.js')(collection_name);

    if(docId == ''){
        return res.status(400).send({
            message: "Sepcify document id to get data!"
        });
    }
    Collection.findOne({_id: docId}, function(err, document) {
        if(document === undefined || document === null){
            return res.status(404).send({
                message: "Not Found."
            });
        }
        
        if(err){
            return res.status(500).send({
                message: err.message || "Unknown error"
            });
        }
        return res.send(document);
      });
};

// Delete a note with the specified noteId in the request
exports.delete = (req, res) => {
    const collection_name = req.params.collection_name;
    const docId = req.params.id;

    let Collection = require('./db.model.js')(collection_name);

    if(docId == ''){
        return res.status(400).send({
            message: "Sepcify document id to get data!"
        });
    }
    Collection.findOne({_id: docId}, function(err, document) {
        
        if(document === undefined || document == null){
            return res.status(404).send({
                message: "Not Found."
            });
        }
        
        if(err){
            return res.status(500).send({
                message: err.message || "Unknown error"
            });
        }
        Collection.deleteOne({_id: docId}, (err) => {
            if(err){
                return res.status(500).send({
                    message: err.message || "Unknown error"
                });
            }
            return res.send({
                message: "Deleted"
            });
        });
      });
};